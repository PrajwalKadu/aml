import tensorflow as tf
import numpy as np

# Define XOR input and output
input_data = np.array([[0, 0], [0, 1], [1, 0], [1, 1]], dtype=np.float32)
output_data = np.array([[0], [1], [1], [0]], dtype=np.float32)

# Define the neural network architecture
model = tf.keras.Sequential([
    tf.keras.layers.Dense(2, input_dim=2, activation='sigmoid'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

# Compile the model
model.compile(optimizer='adam', loss='mean_squared_error', metrics=['accuracy'])

# Train the model
model.fit(input_data, output_data, epochs=10000, verbose=0)

# Evaluate the model
loss, accuracy = model.evaluate(input_data, output_data)
print(f"Model Accuracy: {accuracy}")

# Make predictions
predictions = model.predict(input_data)
rounded_predictions = np.round(predictions)
print("Predictions:")
print(rounded_predictions)
